<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闲言碎语</title>
  <subtitle>等一个人，等一个故事</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ufdouble.com/"/>
  <updated>2016-07-04T08:36:07.518Z</updated>
  <id>http://ufdouble.com/</id>
  
  <author>
    <name>DOUBLE</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx缓存静态文件搭建详解</title>
    <link href="http://ufdouble.com/2016/07/04/nginx%E7%BC%93%E5%AD%98%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/"/>
    <id>http://ufdouble.com/2016/07/04/nginx缓存静态文件/</id>
    <published>2016-07-04T08:18:12.941Z</published>
    <updated>2016-07-04T08:36:07.518Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;nginx缓存静态文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接触nginx的兄弟或多或少都有遇到缓存问题，要么是nginx为什么不缓存，要么就是nginx缓存很快就失效等等问题，在网上找了一遍nginx缓存优先级的文章，大家可以参考下。&lt;/p&gt;
&lt;h2 id=&quot;架构图&quot;&gt;&lt;a href=&quot;#架构图&quot; class=&quot;headerlink&quot; title=&quot;架构图&quot;&gt;&lt;/a&gt;架构图&lt;/h2&gt;&lt;p&gt;client端  &amp;lt;——————&amp;gt;   nginx cache &amp;lt;——————&amp;gt;源服务器&lt;/p&gt;
&lt;p&gt;经过大量测试发现：nginx的过期顺序是有一个优先级的。下面首先说明各个影响缓存过期的因素：&lt;/p&gt;
&lt;p&gt;（1）inactive:在proxy_cache_path配置项中进行配置，说明某个缓存在inactive指定的时间内如果不访问，将会从缓存中删除。&lt;/p&gt;
&lt;p&gt;（2）源服务器php页面中生成的响应头中的Expires，生成语句为：header(“Expires: Fri, 07 Sep 2013 08:05:18 GMT”);&lt;/p&gt;
&lt;p&gt;（3）源服务器php页面生成的max-age，生成语句为：header(“Cache-Control: max-age=60”);&lt;/p&gt;
&lt;p&gt;（4）nginx的配置项 proxy_cache_valid:配置nginx cache中的缓存文件的缓存时间，如果配置项为：proxy_cache_valid 200 304 2m;说&lt;br&gt;明对于状态为200和304的缓存文件的缓存时间是2分钟，两分钟之后再访问该缓存文件时，文件会过期，从而去源服务器重新取数据。&lt;br&gt;其次对需要注意的一点：源服务器的expires和nginx cache的expires配置项的冲突进行说明，场景如下&lt;/p&gt;
&lt;p&gt;（1）源服务器端有php文件ta1.php内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
header(&amp;quot;Expires: Fri, 07 Sep 2013 08:05:18 GMT&amp;quot;);
header(&amp;quot;Last-Modified: &amp;quot;.gmdate(&amp;quot;D, d M Y H:i:s&amp;quot;).&amp;quot; GMT&amp;quot;);
header(&amp;quot;Cache-Control: max-age=60&amp;quot;);
echo&amp;quot;ta1&amp;quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（2）在nginx cache服务器端的配置信息如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;…….
proxy_cache_path /data0/proxy_cache_dir levels=1:2  keys_zone=cache_one:200minactive=5smax_size=30g;
……..

location~.*\.(php|jsp|cgi)$
{
   proxy_read_timeout10s;
   proxy_connect_timeout10s;
   proxy_set_header Host$host;
   proxy_cache_use_stale updating;
   proxy_cache_key$host$uri$is_args$args;
   proxy_cache cache_one;
   #proxy_ignore_headers &amp;quot;Cache-Control&amp;quot;;
   #proxy_hide_header &amp;quot;Cache-Control&amp;quot;;
   #proxy_ignore_headers &amp;quot;Expires&amp;quot;;
   #proxy_hide_header &amp;quot;Expires&amp;quot;;
   proxy_hide_header&amp;quot;Set-Cookie&amp;quot;;
   proxy_ignore_headers&amp;quot;Set-Cookie&amp;quot;;
   #add_header Cache-Control max-age=60;
   add_headerX-Cache&amp;apos;$upstream_cache_status from $server_addr&amp;apos;;
   proxy_cache_valid2003042m;
   #proxy_cache_valid any 0m;
   proxy_pass http://backend_server;
   expires30s;
}
………….
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从上面两项可以看出nginx cache 服务器中expires的配置是30s，该expires的值直接决定了在浏览器端看到的max-age以及expires的值。而源服务器断的代码中设置的响应头中的max-age为60，expires为Fri, 07 Sep 2013 08:05:18 GMT。这是源服务器的设置于nginx-cache的设置冲突了，那么着两个属性应该怎么设置呢？&lt;br&gt;这时client端的max-age与expires的值按照nginx cache中的expires配置项的设置，即:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Expires Fri,07Sep201208:59:16GMT
Cache-Controlmax-age=30
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;而nginx cache端的缓存的max-age与expire的值按照源服务器上的代码的设置。即：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Expires Fri,07Sep201308:05:18GMT
Cache-Controlmax-age=60
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在步入正题：&lt;/p&gt;
&lt;p&gt;经过大量测试发现：对缓存的过期与清除起作用的因素的优先级从高到低一次为：&lt;br&gt;inactive配置项、源服务器设置的Expires、源服务器设置的Max-Age、proxy_cache_valid配置项&lt;br&gt;下面通过几个实例对这几个优先级进行说明&lt;/p&gt;
&lt;p&gt;实例1：&lt;/p&gt;
&lt;p&gt;服务器端php代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
header(&amp;quot;Expires: Fri, 07 Sep 2012 08:03:18 GMT&amp;quot;);//其实是3分钟之后
header(&amp;quot;Last-Modified: &amp;quot;.gmdate(&amp;quot;D, d M Y H:i:s&amp;quot;).&amp;quot; GMT&amp;quot;);
header(&amp;quot;Cache-Control: max-age=180&amp;quot;);//2分钟
//header(&amp;quot;Cache-Control: post-check=0, pre-check=0&amp;quot;, false);
echo&amp;quot;ta1&amp;quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nginx cache 配置项&lt;/p&gt;
&lt;p&gt;inactive 4m//4分钟&lt;/p&gt;
&lt;p&gt;proxy_cache_valid 1m//1分钟&lt;/p&gt;
&lt;p&gt;现象：第一次访问页面ta1.php之后，各个时间的访问结果：&lt;/p&gt;
&lt;p&gt;1分钟之后 ：HIT//这说明valid没有起作用&lt;/p&gt;
&lt;p&gt;2分钟之后 ：HIT//这说明 源服务器设置的max-age没有起作用&lt;/p&gt;
&lt;p&gt;3分钟之后：MISS//这说明源服务器设置的Expires起作用了&lt;/p&gt;
&lt;p&gt;4分钟之后：MISS//这说明inactive起作用了&lt;/p&gt;
&lt;p&gt;实例2：&lt;/p&gt;
&lt;p&gt;服务器端php代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
header(&amp;quot;Expires: Fri, 07 Sep 2012 08:03:18 GMT&amp;quot;);//3分钟之后
header(&amp;quot;Last-Modified: &amp;quot;.gmdate(&amp;quot;D, d M Y H:i:s&amp;quot;).&amp;quot; GMT&amp;quot;);
header(&amp;quot;Cache-Control: max-age=180&amp;quot;);//2分钟
//header(&amp;quot;Cache-Control: post-check=0, pre-check=0&amp;quot;, false);
echo&amp;quot;ta1&amp;quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nginx cache 配置项&lt;/p&gt;
&lt;p&gt;inactive 10s//10秒钟&lt;/p&gt;
&lt;p&gt;proxy_cache_valid 1m//1分钟&lt;/p&gt;
&lt;p&gt;现象：第一次访问页面ta1.php之后，各个时间的访问结果：&lt;/p&gt;
&lt;p&gt;5秒后访问：HIT&lt;/p&gt;
&lt;p&gt;10秒后访问: MISS&lt;/p&gt;
&lt;p&gt;15秒后访问：HIT&lt;/p&gt;
&lt;p&gt;20秒后访问:MISS&lt;/p&gt;
&lt;p&gt;通过实例1和实例2综合分析：如果inactive已经进行了设置，则缓存的过期时间以inactive设置的值为准&lt;/p&gt;
&lt;p&gt;实例3：&lt;/p&gt;
&lt;p&gt;服务器端php代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
header(&amp;quot;Expires: Fri, 07 Sep 1977 08:03:18 GMT&amp;quot;);//直接过期
header(&amp;quot;Last-Modified: &amp;quot;.gmdate(&amp;quot;D, d M Y H:i:s&amp;quot;).&amp;quot; GMT&amp;quot;);
header(&amp;quot;Cache-Control: max-age=120&amp;quot;);//2分钟
//header(&amp;quot;Cache-Control: post-check=0, pre-check=0&amp;quot;, false);
echo&amp;quot;ta1&amp;quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nginx cache 配置项&lt;/p&gt;
&lt;p&gt;inactive 4m//4分钟&lt;/p&gt;
&lt;p&gt;proxy_cache_valid 1m//1分钟&lt;/p&gt;
&lt;p&gt;现象：第一次访问页面ta1.php之后，各个时间的访问结果：&lt;/p&gt;
&lt;p&gt;每隔一秒访问一次：MISS//这说明源服务器端设置的Expires屏蔽了nginx的valide和源服务器端设置的max-age的作用&lt;/p&gt;
&lt;p&gt;实例4：&lt;/p&gt;
&lt;p&gt;服务器端php代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
header(&amp;quot;Expires: Fri, 07 Sep 2012 08:03:18 GMT&amp;quot;);//3分钟之后
header(&amp;quot;Last-Modified: &amp;quot;.gmdate(&amp;quot;D, d M Y H:i:s&amp;quot;).&amp;quot; GMT&amp;quot;);
header(&amp;quot;Cache-Control: max-age=120&amp;quot;);//2分钟
//header(&amp;quot;Cache-Control: post-check=0, pre-check=0&amp;quot;, false);
echo&amp;quot;ta1&amp;quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nginx cache 配置项&lt;/p&gt;
&lt;p&gt;inactive 4m//4分钟&lt;/p&gt;
&lt;p&gt;proxy_cache_valid 1m//1分钟&lt;/p&gt;
&lt;p&gt;现象：第一次访问页面ta1.php之后，各个时间的访问结果：&lt;/p&gt;
&lt;p&gt;1分钟之后 ：   HIT//这说明valid没有起作用，因为源服务器设置的Expires将valid的效果屏蔽了&lt;/p&gt;
&lt;p&gt;2分钟之后 ：   HIT//这说明 源服务器设置的max-age没有起作用，因为源服务器设置的Expires将max-age屏蔽了&lt;/p&gt;
&lt;p&gt;3分钟之后：    MISS//这说明服务器端设置的expires起作用了&lt;/p&gt;
&lt;p&gt;通过实例2和实例3的现象说明：如果inactive设置的比较大，在inactive到期之前，如果valid、服务器端设置的expires、服务器端设置的max-&lt;br&gt;age都进行了设置，则以服务器端设置的expires为准。&lt;/p&gt;
&lt;p&gt;实例5：&lt;/p&gt;
&lt;p&gt;服务器端php代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
header(&amp;quot;Expires: Fri, 07 Sep 2012 08:03:18 GMT&amp;quot;);//3分钟之后
header(&amp;quot;Last-Modified: &amp;quot;.gmdate(&amp;quot;D, d M Y H:i:s&amp;quot;).&amp;quot; GMT&amp;quot;);
header(&amp;quot;Cache-Control: max-age=120&amp;quot;);//2分钟
//header(&amp;quot;Cache-Control: post-check=0, pre-check=0&amp;quot;, false);
echo&amp;quot;ta1&amp;quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nginx cache 配置项&lt;/p&gt;
&lt;p&gt;inactive 4m//4分钟&lt;/p&gt;
&lt;p&gt;#下面两行用于消除服务器端配置的Expires响应头的影响&lt;/p&gt;
&lt;p&gt;proxy_ignore_headers “Expires”;&lt;/p&gt;
&lt;p&gt;proxy_hide_header “Expires”;&lt;/p&gt;
&lt;p&gt;proxy_cache_valid 1m//1分钟&lt;/p&gt;
&lt;p&gt;现象：第一次访问页面ta1.php之后，各个时间的访问结果：&lt;/p&gt;
&lt;p&gt;1分钟之后   HIT //这说明valid的作用已经被服务器端的max-age屏蔽&lt;/p&gt;
&lt;p&gt;2分钟之后   MISS//服务器端设置的max-age起作用&lt;/p&gt;
&lt;p&gt;实例6：&lt;/p&gt;
&lt;p&gt;服务器端php代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
header(&amp;quot;Expires: Fri, 07 Sep 2012 08:03:18 GMT&amp;quot;);//3分钟之后
header(&amp;quot;Last-Modified: &amp;quot;.gmdate(&amp;quot;D, d M Y H:i:s&amp;quot;).&amp;quot; GMT&amp;quot;);
header(&amp;quot;Cache-Control: max-age=50&amp;quot;);//50秒钟
//header(&amp;quot;Cache-Control: post-check=0, pre-check=0&amp;quot;, false);
echo&amp;quot;ta1&amp;quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;nginx cache 配置项&lt;/p&gt;
&lt;p&gt;inactive 4m//4分钟&lt;/p&gt;
&lt;p&gt;#下面两行用于消除服务器端配置的Expires响应头的影响&lt;/p&gt;
&lt;p&gt;proxy_ignore_headers “Expires”;&lt;/p&gt;
&lt;p&gt;proxy_hide_header “Expires”;&lt;/p&gt;
&lt;p&gt;proxy_cache_valid 2m//2分钟&lt;/p&gt;
&lt;p&gt;现象：第一次访问页面ta1.php之后，各个时间的访问结果：&lt;/p&gt;
&lt;p&gt;50秒钟之后 ：   MISS//这说明服务器端配置的max-age起作用&lt;/p&gt;
&lt;p&gt;1分钟之后 ：   HIT//&lt;/p&gt;
&lt;p&gt;100秒钟之后：   MISS//这说明服务器端设置的max-age起作用了&lt;/p&gt;
&lt;p&gt;通过实例5和实例6的现象说明：如果inactive设置的比较大，而且在nginx配置文件中取消服务器端Expires对缓存的影响。在同时设置了proxy_cache_valid和服务器端设置了max-age响应头字段的情况下，以服务器端设置的max-age的值为标准进行缓存过期处理。&lt;/p&gt;
&lt;p&gt;综上所述：&lt;/p&gt;
&lt;p&gt;（1）在同时设置了源服务器端Expires、源服务器端max-age和nginx cahe端的proxy_cache_valid的情况下，以源服务器端设置的Expires的值为标准进行缓存的过期处理&lt;/p&gt;
&lt;p&gt;（2）若在nginx中配置了相关配置项，取消原服务器端Expires对缓存的影响，在同时设置了源服务器端Expires、源服务器端max-age和nginx cahe端的proxy_cache_valid的情况下，以源服务器端max-age的值为标准进行缓存的过期处理&lt;/p&gt;
&lt;p&gt;（3）若同时取消源服务器端Expires和源服务器端max-age对缓存的影响，则以proxy_cache_valid设置的值为标准进行缓存的过期处理&lt;/p&gt;
&lt;p&gt;（4）Inactive的值不受上述三个因素的影响，即第一次请求页面之后，每经过inactvie指定的时间，都要强制进行相应的缓存清理。因此inactive的优先级最高。&lt;/p&gt;
&lt;p&gt;（5）所以对缓存过期影响的优先级进行排序为：inactvie、源服务器端Expires、源服务器端max-age、proxy_cache_valid&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转自：&lt;a href=&quot;http://lmdkfs.blog.163.com/blog/static/7461132420142128311980/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://lmdkfs.blog.163.com/blog/static/7461132420142128311980/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;nginx缓存静态文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接触nginx的兄弟或多或少都有遇到缓存问题，要么是nginx为什么不缓存，要么就是nginx缓存很快就失效等等问题，在网上找了一遍nginx缓存优先级的文章，大家可以参考下。&lt;/p
    
    </summary>
    
      <category term="服务端技术" scheme="http://ufdouble.com/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="nginx" scheme="http://ufdouble.com/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF/nginx/"/>
    
    
      <category term="nginx" scheme="http://ufdouble.com/tags/nginx/"/>
    
      <category term="java" scheme="http://ufdouble.com/tags/java/"/>
    
      <category term="缓存" scheme="http://ufdouble.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>个人博客图片测试</title>
    <link href="http://ufdouble.com/2016/07/03/rating/"/>
    <id>http://ufdouble.com/2016/07/03/rating/</id>
    <published>2016-07-03T04:32:01.153Z</published>
    <updated>2016-07-03T04:42:37.558Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;图片测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;关于骑行那些事&quot;&gt;&lt;a href=&quot;#关于骑行那些事&quot; class=&quot;headerlink&quot; title=&quot;关于骑行那些事&quot;&gt;&lt;/a&gt;关于骑行那些事&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/bwyG01t.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/CorVKWU.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/WENVFWW.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;图片测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;关于骑行那些事&quot;&gt;&lt;a href=&quot;#关于骑行那些事&quot; class=&quot;headerlink&quot; title=&quot;关于骑行那些事&quot;&gt;&lt;/a&gt;关于骑行那些事&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;h
    
    </summary>
    
      <category term="个人爱好" scheme="http://ufdouble.com/categories/%E4%B8%AA%E4%BA%BA%E7%88%B1%E5%A5%BD/"/>
    
      <category term="骑行" scheme="http://ufdouble.com/categories/%E4%B8%AA%E4%BA%BA%E7%88%B1%E5%A5%BD/%E9%AA%91%E8%A1%8C/"/>
    
    
      <category term="骑行" scheme="http://ufdouble.com/tags/%E9%AA%91%E8%A1%8C/"/>
    
      <category term="山地车" scheme="http://ufdouble.com/tags/%E5%B1%B1%E5%9C%B0%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>个人博客音乐测试</title>
    <link href="http://ufdouble.com/2016/07/03/muisc/"/>
    <id>http://ufdouble.com/2016/07/03/muisc/</id>
    <published>2016-07-03T03:58:28.151Z</published>
    <updated>2016-07-03T04:23:33.591Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;音乐测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;张碧晨-我可以忘记你：&quot;&gt;&lt;a href=&quot;#张碧晨-我可以忘记你：&quot; class=&quot;headerlink&quot; title=&quot;张碧晨 我可以忘记你：&quot;&gt;&lt;/a&gt;张碧晨 我可以忘记你：&lt;/h2&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;http://music.163.com/outchain/player?type=2&amp;id=416552313&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;音乐测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;张碧晨-我可以忘记你：&quot;&gt;&lt;a href=&quot;#张碧晨-我可以忘记你：&quot; class=&quot;headerlink&quot; title=&quot;张碧晨 我可以忘记你：&quot;&gt;&lt;/a&gt;张碧晨 我可以忘记你：&lt;/h
    
    </summary>
    
      <category term="个人爱好" scheme="http://ufdouble.com/categories/%E4%B8%AA%E4%BA%BA%E7%88%B1%E5%A5%BD/"/>
    
      <category term="音乐" scheme="http://ufdouble.com/categories/%E4%B8%AA%E4%BA%BA%E7%88%B1%E5%A5%BD/%E9%9F%B3%E4%B9%90/"/>
    
    
      <category term="张碧晨" scheme="http://ufdouble.com/tags/%E5%BC%A0%E7%A2%A7%E6%99%A8/"/>
    
      <category term="音乐" scheme="http://ufdouble.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>个人博客视频测试</title>
    <link href="http://ufdouble.com/2016/07/03/video/"/>
    <id>http://ufdouble.com/2016/07/03/video/</id>
    <published>2016-07-03T03:38:37.537Z</published>
    <updated>2016-07-03T04:21:19.336Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;视频测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;NBA过人集锦-脚踝终结者-Crossover：&quot;&gt;&lt;a href=&quot;#NBA过人集锦-脚踝终结者-Crossover：&quot; class=&quot;headerlink&quot; title=&quot;NBA过人集锦 脚踝终结者 Crossover：&quot;&gt;&lt;/a&gt;NBA过人集锦 脚踝终结者 Crossover：&lt;/h2&gt;&lt;iframe height=&quot;498&quot; width=&quot;510&quot; src=&quot;http://player.youku.com/embed/XOTE2NTU3NTA0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;视频测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;NBA过人集锦-脚踝终结者-Crossover：&quot;&gt;&lt;a href=&quot;#NBA过人集锦-脚踝终结者-Crossover：&quot; class=&quot;headerlink&quot; title=&quot;NBA过人
    
    </summary>
    
      <category term="个人爱好" scheme="http://ufdouble.com/categories/%E4%B8%AA%E4%BA%BA%E7%88%B1%E5%A5%BD/"/>
    
      <category term="篮球" scheme="http://ufdouble.com/categories/%E4%B8%AA%E4%BA%BA%E7%88%B1%E5%A5%BD/%E7%AF%AE%E7%90%83/"/>
    
    
      <category term="篮球" scheme="http://ufdouble.com/tags/%E7%AF%AE%E7%90%83/"/>
    
      <category term="NBA" scheme="http://ufdouble.com/tags/NBA/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建详解（Windows和Mac通用版）</title>
    <link href="http://ufdouble.com/2016/07/03/fisrtBlog/"/>
    <id>http://ufdouble.com/2016/07/03/fisrtBlog/</id>
    <published>2016-07-03T00:25:00.720Z</published>
    <updated>2016-07-03T03:37:30.660Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Hexo 是一个基于nodejs 的静态博客网站生成器，作者是来自台湾的 Tommy Chen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文／diygreen（简书作者）&lt;br&gt;原文链接：&lt;a href=&quot;http://www.jianshu.com/p/380290deb8f0#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/380290deb8f0#&lt;/a&gt;&lt;br&gt;著作权归作者所有，转载请联系作者获得授权，并标注“简书作者”。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Hexo 是一个基于nodejs 的静态博客网站生成器，作者是来自台湾的 Tommy Chen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文／diygreen（简书作者）&lt;br&gt;原文链接：&lt;a href=&quot;http://www.jianshu.co
    
    </summary>
    
      <category term="实用技术" scheme="http://ufdouble.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="个人博客" scheme="http://ufdouble.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="实用" scheme="http://ufdouble.com/tags/%E5%AE%9E%E7%94%A8/"/>
    
      <category term="个人博客" scheme="http://ufdouble.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
